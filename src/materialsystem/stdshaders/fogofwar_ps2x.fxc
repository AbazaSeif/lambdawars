//========= Copyright © 1996-2006, Valve Corporation, All rights reserved. ============//
// Includes =======================================================================================
// STATIC: "CONVERT_TO_SRGB" "0..1"	[ps20b][= g_pHardwareConfig->NeedsShaderSRGBConversion()] [PC]
// STATIC: "CONVERT_TO_SRGB" "0..0"	[= 0] [XBOX]
// STATIC: "FOW"				 "0..1"

#include "common_ps_fxc.h" 
#include "fow_ps_fxc.h"

// Texture Samplers ===============================================================================
sampler FogOfWarSampler		: register( s0 );

// Shaders Constants and Globals ==================================================================
//const float4 g_Color        : register( c0 );

// Interpolated values ============================================================================
struct PS_INPUT
{
	float2 vTexCoord0 : TEXCOORD0;
};

// Main ===========================================================================================
float4 main( PS_INPUT i ) : COLOR
{
    float4 result;
  
 #if FOW
    float fowvalue = 1.0f - tex2D( FogOfWarSampler, i.vTexCoord0.xy ).r;
    
    result = float4(0.15, 0.15, 0.15, fowvalue);
    float fDarknessValue = FOW_DARKNESS_VALUE + (0.2 - (0.2 * tex2D( FogOfWarSampler, i.vTexCoord0.xy ).g));
    result = ( result * FOW_GRAY_FACTOR	 * fDarknessValue ) + ( result * FOW_COLOR_FACTOR * fDarknessValue );

    return FinalOutput( result, 0, PIXEL_FOG_TYPE_NONE, TONEMAP_SCALE_NONE );
#else
	return float4(0.0, 0.0, 0.0, 0.0);
#endif
}
