// This file has been generated by Py++.

#include "cbase.h"

#ifdef CLIENT_DLL

#include "boost/python.hpp"

#include "videocfg/videocfg.h"

#include "cbase.h"

#include "src_python_matchmaking.h"

#include "src_python.h"

#include "tier0/memdbgon.h"

namespace bp = boost::python;

BOOST_PYTHON_MODULE(matchmaking){
    bp::docstring_options doc_options( true, true, false );

    bp::class_< PyMatchSession >( "matchsession" )    
        .def( 
            "Command"
            , (void (*)( ::KeyValues * ))( &::PyMatchSession::Command )
            , ( bp::arg("pCommand") ) )    
        .def( 
            "GetSessionSettings"
            , (::KeyValues * (*)(  ))( &::PyMatchSession::GetSessionSettings )
            , bp::return_value_policy< bp::return_by_value >() )    
        .def( 
            "GetSessionSystemData"
            , (::KeyValues * (*)(  ))( &::PyMatchSession::GetSessionSystemData )
            , bp::return_value_policy< bp::return_by_value >() )    
        .def( 
            "UpdateSessionSettings"
            , (void (*)( ::KeyValues * ))( &::PyMatchSession::UpdateSessionSettings )
            , ( bp::arg("pSettings") ) )    
        .staticmethod( "Command" )    
        .staticmethod( "GetSessionSettings" )    
        .staticmethod( "GetSessionSystemData" )    
        .staticmethod( "UpdateSessionSettings" );

    { //::PyMKCreateSession
    
        typedef void ( *CreateSession_function_type )( ::KeyValues * );
        
        bp::def( 
            "CreateSession"
            , CreateSession_function_type( &::PyMKCreateSession )
            , ( bp::arg("pSettings") ) );
    
    }

    { //::PyMKMatchSession
    
        typedef void ( *MatchSession_function_type )( ::KeyValues * );
        
        bp::def( 
            "MatchSession"
            , MatchSession_function_type( &::PyMKMatchSession )
            , ( bp::arg("pSettings") ) );
    
    }
}

#else

#include "boost/python.hpp"

#include "cbase.h"

#include "src_python_matchmaking.h"

#include "src_python.h"

#include "tier0/memdbgon.h"

namespace bp = boost::python;

BOOST_PYTHON_MODULE(matchmaking){
    bp::docstring_options doc_options( true, true, false );

    bp::class_< PyMatchSession >( "matchsession" )    
        .def( 
            "Command"
            , (void (*)( ::KeyValues * ))( &::PyMatchSession::Command )
            , ( bp::arg("pCommand") ) )    
        .def( 
            "GetSessionSettings"
            , (::KeyValues * (*)(  ))( &::PyMatchSession::GetSessionSettings )
            , bp::return_value_policy< bp::return_by_value >() )    
        .def( 
            "GetSessionSystemData"
            , (::KeyValues * (*)(  ))( &::PyMatchSession::GetSessionSystemData )
            , bp::return_value_policy< bp::return_by_value >() )    
        .def( 
            "UpdateSessionSettings"
            , (void (*)( ::KeyValues * ))( &::PyMatchSession::UpdateSessionSettings )
            , ( bp::arg("pSettings") ) )    
        .staticmethod( "Command" )    
        .staticmethod( "GetSessionSettings" )    
        .staticmethod( "GetSessionSystemData" )    
        .staticmethod( "UpdateSessionSettings" );

    { //::PyMKCreateSession
    
        typedef void ( *CreateSession_function_type )( ::KeyValues * );
        
        bp::def( 
            "CreateSession"
            , CreateSession_function_type( &::PyMKCreateSession )
            , ( bp::arg("pSettings") ) );
    
    }

    { //::PyMKMatchSession
    
        typedef void ( *MatchSession_function_type )( ::KeyValues * );
        
        bp::def( 
            "MatchSession"
            , MatchSession_function_type( &::PyMKMatchSession )
            , ( bp::arg("pSettings") ) );
    
    }
}

#endif // CLIENT_DLL


