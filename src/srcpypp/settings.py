import os

# srcpath is the folder containing the game directory with source code (i.e. server, client and shared)
srcpath = '..'

# Paths to be searched by Python for modules containing the binding code
searchpaths = [
    os.path.normpath('game/client/python/modules/'),
    os.path.normpath('game/server/python/modules/'),
    os.path.normpath('game/shared/python/modules/'),
]

# Output folder name, used for creating filters by VPC (see srcpypp.genvpc)
autogenfoldername = 'autogenerated'

# Output paths for generated binding code (must use autogenfoldername)
client_path = os.path.normpath('game/client/python/modules/%s/' % (autogenfoldername))
server_path = os.path.normpath('game/server/python/modules/%s/' % (autogenfoldername))
shared_path = os.path.normpath('game/shared/python/modules/%s/' % (autogenfoldername))

# Alien Swarm code base? 
ASW_CODE_BASE = True

# Project project paths (see vxprojinfo.py for the available info)
vcxprojserver = '../game/server/wars_server.vcxproj'
vcxprojclient = '../game/client/wars_client.vcxproj'

# Automatically add all python module files to the project files
# Backup before using!
autoupdatevxproj = False
addpythonfiles = True

# Modules
modules = [
    # Base
    ('srcbuiltins', 'SrcBuiltins'),
    ('srcbase', 'SrcBase'),
    ('_vmath', 'VMath'),
    ('_entities', 'Entities'),
    ('_entitiesmisc', 'EntitiesMisc'),
    ('_gameinterface', 'GameInterface'),
    ('_utils', 'Utils'),
    ('_physics', 'Physics'),
    ('_sound', 'Sound'),
    ('_particles', 'Particles'),
    ('materials', 'Materials'),
    ('_animation', 'Animation'),
    ('_te', 'TE'),
    ('_fow', 'FOW'),
    ('steam', 'Steam'),
    
    # # Client
    ('_input', 'Input'),
    ('_vgui', 'VGUI'),
    ('_vguicontrols', 'VGUIControls'),
    ('_cef', 'CEF'),
    
    # # Game
    ('_gamerules', 'GameRules'),
    ('unit_helper', 'UnitHelper'),
    
    # # Misc
    ('_navmesh', 'NavMesh'),
    ('_ndebugoverlay', 'NDebugOverlay'),
    ('vprof', 'VProf'),
    ('_srctests', '_SrcTests'),
    ('matchmaking', 'MatchMaking'),
]

# Base files (in case you want to make use automatically updating the vcxproj)
pythonfiles_shared = [
    '../shared/python/srcpy.cpp',
    '../shared/python/srcpy.h',
    '../shared/python/srcpy_animation.cpp',
    '../shared/python/srcpy_animation.h',
    '../shared/python/srcpy_base.cpp',
    '../shared/python/srcpy_base.h',
    '../shared/python/srcpy_class_shared.cpp',
    '../shared/python/srcpy_class_shared.h',
    '../shared/python/srcpy_converters.h',
    '../shared/python/srcpy_converters_ents.h',
    '../shared/python/srcpy_entities.cpp',
    '../shared/python/srcpy_entities.h',
    '../shared/python/srcpy_gameinterface.cpp',
    '../shared/python/srcpy_gameinterface.h',
    '../shared/python/srcpy_gameinterface_converters.h',
    '../shared/python/srcpy_gamerules.cpp',
    '../shared/python/srcpy_gamerules.h',
    '../shared/python/srcpy_matchmaking.cpp',
    '../shared/python/srcpy_matchmaking.h',
    '../shared/python/srcpy_materials.cpp',
    '../shared/python/srcpy_materials.h',
    '../shared/python/srcpy_navmesh.cpp',
    '../shared/python/srcpy_navmesh.h',
    '../shared/python/srcpy_networkvar.cpp',
    '../shared/python/srcpy_networkvar.h',
    '../shared/python/srcpy_particles.cpp',
    '../shared/python/srcpy_particles.h',
    '../shared/python/srcpy_physics.cpp',
    '../shared/python/srcpy_physics.h',
    '../shared/python/srcpy_scclasses.cpp',
    '../shared/python/srcpy_sound.cpp',
    '../shared/python/srcpy_sound.h',
    '../shared/python/srcpy_te.cpp',
    '../shared/python/srcpy_te.h',
    '../shared/python/srcpy_tests.cpp',
    '../shared/python/srcpy_tests.h',
    '../shared/python/srcpy_usermessage.cpp',
    '../shared/python/srcpy_usermessage.h',
    '../shared/python/srcpy_util.cpp',
    '../shared/python/srcpy_util.h',
    '../shared/python/srcpy_srcbuiltins.cpp',
    '../shared/python/srcpy_srcbuiltins.h',
]

pythonfiles_client = [
    'python/srcpy_client_class.cpp',
    'python/srcpy_client_class.h',
    'python/srcpy_hud.cpp',
    'python/srcpy_hud.h',
    'python/srcpy_vgui.cpp',
    'python/srcpy_vgui.h',
    'python/SurfaceBuffer.cpp',
    'python/SurfaceBuffer.h',
]

pythonfiles_server = [
    'python/srcpy_server_class.cpp',
    'python/srcpy_server_class.h',
]

